properties ([
	parameters ([
		string(name: 'APP_NAME', defaultValue: 'myapp-test', description: '', trim: true),
		string(name: 'NAMESPACE', defaultValue: 'myapp-test', description: '', trim: true),
		string(name: 'GIT_URL', defaultValue: 'https://github.com/skanav1986/myapp-test.git', description: '', trim: true),
        string(name: 'CLUSTER_BUILDER', defaultValue: 'default', description: '', trim: true),
        string(name: 'BRANCH_NAME', defaultValue: 'master', description: '', trim: true),
		string(name: 'IMAGE_TAG', defaultValue: 'harborfortbs.test.com/library/myapp-test', description: '', trim: true),
	])
])

pipeline {

    agent {
        kubernetes {
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
     app.kubernetes.io/name: jenkins-build
     app.kubernetes.io/component: jenkins-build
     app.kubernetes.io/version: "1"
  namespace: myapp-test
spec:
  containers:
  - name: k8s
    image: harborfortbs.test.com/library/docker-build
    command:
    - sleep
    args:
    - infinity
"""
        }
    }

    stages {

/*
        
        stage('Initialize the variables') {
            steps{
                script{
                    APP_NAME="myapp-test"
                    NAMESPACE="myapp-test"
                    GIT_URL="https://github.com/skanav1986/myapp-test.git"
                    CLUSTER_BUILDER="default"
                    BRANCH_NAME="master"
                    IMAGE_TAG="harborfortbs.test.com/library/myapp-test"
                }
            }
        }       
*/
        stage('Fetch from GitHub') {
            steps {
                dir("app"){
                    git(
                        poll: true,
                        changelog: true,
                        branch: "${BRANCH_NAME}",
                        credentialsId: "github-creds",
                        url: "${GIT_URL}"
                    )
                    sh 'git rev-parse HEAD > git-commit.txt'
                }
            }
        }

        stage('Create Image') {
            steps {
                container('k8s') {
                    sh '''#!/bin/sh -e
                        export GIT_COMMIT=$(cat app/git-commit.txt)
                        echo "Start kp image save....." 
                        kp image save "${APP_NAME}" \
                            --git "${GIT_URL}" \
                            --cluster-builder "${CLUSTER_BUILDER}" \
                            --tag "${IMAGE_TAG}" \
                            --env BP_GRADLE_BUILD_ARGUMENTS='--no-daemon build' \
                            --git-revision ${GIT_COMMIT} --sub-path ./ -n "${NAMESPACE}" -w
                    '''
                }
            }
        }
      }
      }
        
